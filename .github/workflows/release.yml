# .github/workflows/release.yml

name: Release

on:
  push:
    tags:
      - 'v*' # Trigger only when tags starting with 'v' are pushed

jobs:
  test-and-build:
    # Grant permissions necessary for creating releases
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # Match the Go version in your go.mod if different

      - name: Build
        run: go build -v ./...

      - name: Run Unit Tests
        run: go test -v ./...

      - name: Run Integration Tests
        run: go test -tags integration -v ./...

      # --- Release Steps Below (only runs if tests above pass) ---

      - name: Build Release Artifacts
        run: echo "Building release artifacts... (Replace with actual build commands)"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # Gets the tag name (e.g., v0.2.0-beta)
          release_name: Release ${{ github.ref_name }}
          body: |
            Automated release for tag ${{ github.ref_name }}
            *(Release notes should ideally be generated or added here)*
          draft: false
          prerelease: ${{ contains(github.ref_name, '-beta') || contains(github.ref_name, '-rc') }} # Mark as pre-release if tag contains -beta or -rc

      # Example Upload Step (Uncomment and modify when you have artifacts)
      # - name: Upload Release Artifacts
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./path/to/your/artifact # Replace with actual artifact path
      #     asset_name: name-of-your-artifact # Replace with desired artifact name
      #     asset_content_type: application/octet-stream # Or specific type 