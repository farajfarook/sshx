# .github/workflows/release.yml

name: Release

on:
  push:
    tags:
      - 'v*' # Trigger only when tags starting with 'v' are pushed

jobs:
  test-and-build:
    # Grant permissions necessary for creating releases
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # Match the Go version in your go.mod if different
          cache: false # Disable setup-go's built-in cache

      - name: Build
        run: go build -v ./...

      - name: Run Unit Tests
        run: go test -v ./...

      - name: Run Integration Tests
        run: go test -tags integration -v ./...

      # --- Release Steps Below (only runs if tests above pass) ---

      - name: Build Release Binaries
        run: |
          # Define targets
          targets=("linux/amd64" "windows/amd64" "darwin/amd64")
          # Add flags for smaller binaries
          ldflags="-s -w"

          for target in "${targets[@]}"; do
            # Split target into OS and ARCH
            IFS='/' read -r goos goarch <<< "$target"
            # Set output name
            output_name="sshx-${goos}-${goarch}"
            if [ "$goos" == "windows" ]; then
              output_name+=".exe"
            fi
            # Build
            echo "Building $output_name..."
            env GOOS=$goos GOARCH=$goarch go build -v -ldflags="$ldflags" -o "$output_name" .
          done
          # List created files for verification
          ls -l sshx-*

      - name: Create GitHub Release # This step uses ncipollo/release-action
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "sshx-*" # Upload all files matching sshx-*
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref_name, '-beta') || contains(github.ref_name, '-rc') }}
          # Removed invalid inputs like tag_name, release_name, body, draft
          # The action infers tag, name, and body from the context

      # Removed the commented-out example upload step as ncipollo handles it 